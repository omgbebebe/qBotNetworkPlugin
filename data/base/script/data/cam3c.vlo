//Generic VLO file template for start/expand levels

//Cam3c.vlo

script "GenExp.slo"
run
{
/* Next level stuff */
NextLev		LEVEL		"CAM3A-D1"	//points to next level

/* Define Players/Enemies */
numEnemies	int		1		//MAX 2. Must define same as number of enemy players given next
enemy[0]	int		3
alliancePlayer	int		0		//ally player with self (could be a different player number
allianceEnemy[0]	int	3		//ally enemy with self (could be a different player number
allianceFlag	BOOL		FALSE		//TRUE if want enemies to use each others targets, otherwise mark FALSE

/* Starting Enemy Power */
power[0]	int		50000		//starting power values for each enemy listed above
//power[1]	int		1000

/*Health Retreat Level for each of the enemies listed above*/
healthRetreat[0]	int		80
healthRetreatX[0]	int		6848		//default retreat for non-group units
healthRetreatY[0]	int		23232
runOffFlag		BOOL		TRUE

/* Structure Limits */
numStrucStats	int	6			//MAX 5. Must be same as number of limits given next
strucStat[0]	STRUCTURESTAT	"A0PowerGenerator"
strucLimit[0]	int		0	//5
strucStat[1]	STRUCTURESTAT	"A0ResourceExtractor"
strucLimit[1]	int		0	//200
strucStat[2]	STRUCTURESTAT	"A0ResearchFacility"
strucLimit[2]	int		0	//5
strucStat[3]	STRUCTURESTAT	"A0LightFactory"
strucLimit[3]	int		0	//5
strucStat[4]	STRUCTURESTAT	"A0CommandCentre"
strucLimit[4]	int		0	//1
strucStat[5]	STRUCTURESTAT	"A0ComDroidControl"
strucLimit[5]	int		0	//1

/* Initialisation */
centreX		int		704	//960	//starting view centre (in world units)
centreY		int		17856	//17344
scrollX1	int		0	//scroll limits (in tile units)
scrollY1	int		0
scrollX2	int		64
scrollY2	int		192
zoomLevel	int		1	//starting radar: 0=zoomed out, 2=zoomed in

numLZ		int		1	//2	//MAX 8. Number of Landing zones/areas can't build on (0 = LZ)
LZX[0]		int		56	//coords of LZ in tile units
LZY[0]		int		120
/*	
LZX[1]		int		9	//coords of Gamma base LZ in tile units
LZY[1]		int		184	
*/

ReinforceTime	INT		-1	//-1 for no reinforcements
timeLimit		INT		6000	//10mins for first part (needs to be done if previous misison had a time limit!)

/* Transport exit and entry */
transX[0]	int		57
transY[0]	int		127
transX[1]	int		57
transY[1]	int		127

/* starting technology for enemy */
//NOTE: need to set first number in array for enemy player
//second number needs to correspond to numTechs[enemy]
//MAX 2 enemies, 10 technologies
numTechs[0]	int		25
startTech	[0]	[0]	RESEARCHSTAT	"R-Defense-WallUpgrade09"
startTech	[0]	[1]	RESEARCHSTAT	"R-Struc-Materials09"
startTech	[0]	[2]	RESEARCHSTAT	"R-Struc-Factory-Upgrade06"
startTech	[0]	[3]	RESEARCHSTAT	"R-Struc-Factory-Cyborg-Upgrade06"
startTech	[0]	[4]	RESEARCHSTAT	"R-Struc-VTOLFactory-Upgrade06"
startTech	[0]	[5]	RESEARCHSTAT	"R-Struc-VTOLPad-Upgrade06"
startTech	[0]	[6]	RESEARCHSTAT	"R-Vehicle-Engine09"
startTech	[0]	[7]	RESEARCHSTAT	"R-Vehicle-Metals07"
startTech	[0]	[8]	RESEARCHSTAT	"R-Cyborg-Metals08"
startTech	[0]	[9]	RESEARCHSTAT	"R-Vehicle-Armor-Heat05"
startTech	[0]	[10]	RESEARCHSTAT	"R-Cyborg-Armor-Heat05"
startTech	[0]	[11]	RESEARCHSTAT	"R-Sys-Engineering03"
startTech	[0]	[12]	RESEARCHSTAT	"R-Vehicle-Prop-Hover02"
startTech	[0]	[13]	RESEARCHSTAT	"R-Vehicle-Prop-VTOL02"
startTech	[0]	[14]	RESEARCHSTAT	"R-Wpn-Bomb-Accuracy03"
startTech	[0]	[15]	RESEARCHSTAT	"R-Wpn-Energy-Accuracy01"
startTech	[0]	[16]	RESEARCHSTAT	"R-Wpn-Energy-Damage03"
startTech	[0]	[17]	RESEARCHSTAT	"R-Wpn-Energy-ROF03"
startTech	[0]	[18]	RESEARCHSTAT	"R-Wpn-Missile-Accuracy01"
startTech	[0]	[19]	RESEARCHSTAT	"R-Wpn-Missile-Damage02"
startTech	[0]	[20]	RESEARCHSTAT	"R-Wpn-Rail-Damage02"
startTech	[0]	[21]	RESEARCHSTAT	"R-Wpn-Rail-ROF02"
startTech	[0]	[22]	RESEARCHSTAT	"R-Sys-Sensor-Upgrade01"
startTech	[0]	[23]	RESEARCHSTAT	"R-Sys-NEXUSrepair"
startTech	[0]	[24]	RESEARCHSTAT	"R-Wpn-Flamer-Damage06"

/* Briefings */
numBriefs	int		2	//MAX 5. Needs to be same as the number of briefings given next
brief[0]	INTMESSAGE	"MB3_C_MSG"
brief[1]	INTMESSAGE	"MB3_C_MSG2"
//brief[2]	INTMESSAGE	"MB3_C_MSG3"
briefVal[0]	int		0	//0 remove after playing, 1 keep, 2 don't play immediately
briefVal[1]	int		1	//0 remove after playing, 1 keep, 2 don't play immediately
//briefVal[2]	int		1	//0 remove after playing, 1 keep, 2 don't play immediately
endMsg		INTMESSAGE	"END"

/* Objectives */
numObjectives	int		1	//MAX 3. Needs to be the same as the number of objective blips given next

objective[0]	INTMESSAGE	"CM3C_GAMMABASE"
objectiveX[0]	int		1472	//doesn't use index to array, use world coords
objectiveY[0]	int		23104

/* Victory Conditions */
//NOTE: always assumes victory condition of: number of artifacts collected = victoryArt
numVictory	int		1	//number of victory conditions to be met (not including artifacts)
					//DOESN'T need to be same as number given next (these are set TRUE/FALSE)
					//if victory condition required. Can have 2 set to TRUE and numVictory = 1
					//This will then let player win if EITHER condition is true!
					//Use numVictory of 0 if just want player to get artifacts

//these now done as integers NOT bools!! Use -1 for False, # for True (often an index to check!)
//for this reason must specify ALL victory[]!
victory[0]	int		1	//all enemy vehicles and structures need to be killed
victory[1]	int		-1	//all players vehicles at REGION index # (eg LZ REGION)
victory[2]	int		-1	//number of objectives to get to (uses objective[0] to objective[#])
victory[3]	int		-1	//number of bases to destroy (uses base[0] to base[#])
linkVictory	BOOL		TRUE	//team beta at Gamma Base

/* Failure Conditions */
//Extra conditions above ALL player units and structures dead, or TIME LIMIT expired
//Use -1 for False, # for True (often an index to check!)
fail	[0]	int		-1	//group # index all got to REGION
fail	[1]	int		-1	//REGION index for above (these count as one condition!)
linkFail	BOOL		TRUE	//team Beta dead before reaching base

/* Artifacts */
victoryArt	int		4	//number of artifacts required for victory (must be <= numArt)
numArt	int		4	//MAX 6. Number of artifacts in total (even if not in game, but added as extra research!)

//new improved way of doing artifacts
//artType: 0 = artifact starts on map, 1 = get from STRUCTURE, 2 = get from FEATURE, 3 = get from DROID, 4 = at end of level
//artVal: index to relevant type, ie FEATURE(crate), FEATURE, STRUCTURE, DROID
//artX, artY: artifact coords (this is updated for DROIDS moving by script, but still needs an array to store them in!)

artType	[0]	int		1				//VTOL factory
artVal	[0]	int		2				
artX		[0]	int		4544
artY		[0]	int		21952
artComp	[0]	RESEARCHSTAT	"R-Struc-VTOLFactory-Upgrade04"

artType	[1]	int		1				//Factory
artVal	[1]	int		0
artX		[1]	int		7232
artY		[1]	int		22976
artComp	[1]	RESEARCHSTAT	"R-Vehicle-Body07"

artType	[2]	int		1				//HQ
artVal	[2]	int		4
artX		[2]	int		6720
artY		[2]	int		23616
artComp	[2]	RESEARCHSTAT	"R-Wpn-Missile-LtSAM"

artType	[3]	int		1				//Cyborg Factory
artVal	[3]	int		1
artX		[3]	int		3776
artY		[3]	int		17088
artComp	[3]	RESEARCHSTAT	"R-Wpn-RailGun01"


/*reuse
artType	[4]	int		1
artVal	[4]	int		3				//get this from base 3 factory
artX	[4]	int		4928
artY	[4]	int		6464
artComp	[4]	RESEARCHSTAT	"CAM3RESEARCH" //"R-Wpn-Mortar01Lt"

artType	[5]	int		1				//get this from bunker
artVal	[5]	int		4				
artX	[5]	int		3136
artY	[5]	int		3904
artComp	[5]	RESEARCHSTAT	"CAM3RESEARCH" //"R-Sys-Engineering01"		//"R-Wpn-MG-Damage01"
*/

/* ********************************************	*/
/* lists of stuff referred to by index number 	*/
/* ********************************************	*/

/* ********************************************	*/
/* FEATURES (inc crates, by ID number)	MAX = 10	*/
//features	[0]	FEATURE		649		//crate artifact (1st in valley)
//features	[1]	FEATURE		661		//crate artifact (2nd by huts) (CHANGED TO BUNKER)

/* ********************************************	*/
/* STRUCTURES (by ID number)		MAX = 10	*/

structures	[0]	STRUCTURE	1309	//669		//Base 1 Heavy Factory (artifact)
structures	[1]	STRUCTURE	690		//Northern Cyborg Factory (artifact)
structures	[2]	STRUCTURE	544		//Mid VTOL Factory	(artifact) //different script to handle this
structures	[3]	STRUCTURE	529		//Southern Cyborg Factory
structures	[4]	STRUCTURE	1256		//HQ (artifact)

/* ********************************************	*/
/* DROIDS (by ID number)		MAX = 10	*/
//droids		[0]	DROID		3279		//testdroid

/* ********************************************	*/
/* list of templates (by name)		 MAX = 20	*/
/* ********************************************	*/
templates	[0]	TEMPLATE	"NX-Cyb-Rail1-JUMP"
templates	[1]	TEMPLATE	"NX-Cyb-Miss-JUMP"
templates	[2]	TEMPLATE	"NX-Cyb-PulseLas-JUMP"

templates	[3]	TEMPLATE	"NX-M-Rail2-Hover"
templates	[4]	TEMPLATE	"NX-L-Flash-Hover"
templates	[5]	TEMPLATE	"NX-M-HvSam-Hover"
templates	[6]	TEMPLATE	"NX-M-Link-Hover"


/* reuse
templates	[6]	TEMPLATE	"NX-L-Missile-A-T-VTOL"
templates	[7]	TEMPLATE	"NX-L-Rail1-VTOL"
templates	[8]	TEMPLATE	"NX-L-PulseLas-VTOL"
*/

/* Templates available for this level */
/*
//Trucks
TEMPLATE	"NX-M-Con-Hover" 
//Repairs
TEMPLATE	"NX-L-Repair-Hover"
//Sensors
TEMPLATE	"NX-L-Sens-Hov"
TEMPLATE	"NX-H-CBS-Hover"
TEMPLATE	"NX-M-VTOLCBS-Hover"		//NEW
//Commanders
TEMPLATE	"NX-M-Com-Hover"
//Electronic warfare - takeover
TEMPLATE	"NX-M-Link-Hover"
//Tanks
TEMPLATE	"NX-M-Missile-A-T-Hover"
TEMPLATE	"NX-M-Missile-LtSAM-HT"
TEMPLATE	"NX-M-PulseLas-Hover"
TEMPLATE	"NX-M-Rail2-Hover"
TEMPLATE	"NX-L-Missile-MdArt-Hover"
TEMPLATE	"NX-M-Strike-Hover"
TEMPLATE	"NX-H-Com-Hover"			//(NOT DESIGNED YET!!!)
TEMPLATE	"NX-H-HvMiss-Hover"
TEMPLATE	"NX-H-BeamLas-Hover"			//NEW
//Cyborgs
TEMPLATE	"NX-Cyb-Rail1-JUMP"
TEMPLATE	"NX-Cyb-Miss-JUMP"
TEMPLATE	"NX-Cyb-PulseLas-JUMP"
//VTOLS
TEMPLATE	"NX-L-Missile-A-T-VTOL"
TEMPLATE	"NX-L-Rail1-VTOL"
TEMPLATE	"NX-L-PulseLas-VTOL"
*/


/* ********************************************	*/
//coordinates (world coords)		MAX = 10
/* ********************************************	*/

coordsX		[0]	int		6848		//Default retreat to south base
coordsY		[0]	int		23232

coordsX		[1]	int		4416		//South of VTOL factory
coordsY		[1]	int		23232
coordsX		[2]	int		1600		//NW ramp to gamma
coordsY		[2]	int		18752
coordsX		[3]	int		1600		//Gamma base
coordsY		[3]	int		18752

coordsX		[4]	int		2112		//Eastern ridge of gamma base
coordsY		[4]	int		22208

/*reuse
coordsX		[5]	int		2624		//hillgroup waypoint1
coordsY		[5]	int		5952
coordsX		[6]	int		2752		//hillgroup waypoint2
coordsY		[6]	int		6720
coordsX		[7]	int		2496		//hillgroup waypoint3
coordsY		[7]	int		7488
coordsX		[8]	int		1728		//hillgroup waypoint4
coordsY		[8]	int		7744
*/

/* ********************************************	*/
//regions (world coords)		MAX = 20
/* ********************************************	*/
regionsX1	[0]	int		6848		//group 0 NE
regionsY1	[0]	int		18112
regionsX2	[0]	int		7232
regionsY2	[0]	int		18752

regionsX1	[1]	int		6720		//group 1 E
regionsY1	[1]	int		20928
regionsX2	[1]	int		7232
regionsY2	[1]	int		21440

regionsX1	[2]	int		192		//Gamma base trigger region
regionsY1	[2]	int		22208
regionsX2	[2]	int		2368
regionsY2	[2]	int		24256
	
regionsX1	[3]	int		3008		//North base blip
regionsY1	[3]	int		16320
regionsX2	[3]	int		4672
regionsY2	[3]	int		18880
regionsX1	[4]	int		3008		//Mid VTOL base blip
regionsY1	[4]	int		19776
regionsX2	[4]	int		5568
regionsY2	[4]	int		22976
regionsX1	[5]	int		5568		//South base blip
regionsY1	[5]	int		21952
regionsX2	[5]	int		8000
regionsY2	[5]	int		24896

/* ********************************************	*/
/* sector Stuff */
/* ********************************************	*/
//sectors to attack (covers 1A-C expansion area, in order of priority to attack)
//MAX = 20
//3C SE Quad
sectorsX1	[0]	int		4096
sectorsY1	[0]	int		20480
sectorsX2	[0]	int		8000
sectorsY2	[0]	int		24384
//3C SW Quad
sectorsX1	[1]	int		64
sectorsY1	[1]	int		20480
sectorsX2	[1]	int		4096
sectorsY2	[1]	int		24384
//3C NW Quad
sectorsX1	[2]	int		64
sectorsY1	[2]	int		16384
sectorsX2	[2]	int		4096
sectorsY2	[2]	int		20480
//3C NE Quad
sectorsX1	[3]	int		4096
sectorsY1	[3]	int		16384
sectorsX2	[3]	int		8000
sectorsY2	[3]	int		20480
//3A SW Quad
sectorsX1	[4]	int		64
sectorsY1	[4]	int		12288
sectorsX2	[4]	int		4096
sectorsY2	[4]	int		16384
//3A SE Quad
sectorsX1	[5]	int		4096
sectorsY1	[5]	int		12288
sectorsX2	[5]	int		8000
sectorsY2	[5]	int		16384
//3A NE Quad
sectorsX1	[6]	int		4096
sectorsY1	[6]	int		8192
sectorsX2	[6]	int		8000
sectorsY2	[6]	int		12288
//3A NW Quad
sectorsX1	[7]	int		64
sectorsY1	[7]	int		8192
sectorsX2	[7]	int		4096
sectorsY2	[7]	int		12288
//3B SW Quad
sectorsX1	[8]	int		64
sectorsY1	[8]	int		4096
sectorsX2	[8]	int		4096
sectorsY2	[8]	int		8192
//3B NW Quad
sectorsX1	[9]	int		64
sectorsY1	[9]	int		64
sectorsX2	[9]	int		4096
sectorsY2	[9]	int		4096
//3B NE Quad
sectorsX1	[10]	int		4096
sectorsY1	[10]	int		64
sectorsX2	[10]	int		8000
sectorsY2	[10]	int		4096
//3B SE Quad
sectorsX1	[11]	int		4096
sectorsY1	[11]	int		4096
sectorsX2	[11]	int		8000
sectorsY2	[11]	int		8192

/*reuse
//sect
sectorsX1	[12]	int		3392
sectorsY1	[12]	int		832
sectorsX2	[12]	int		3776
sectorsY2	[12]	int		1472
//sect
sectorsX1	[13]	int		2624
sectorsY1	[13]	int		1600
sectorsX2	[13]	int		3392
sectorsY2	[13]	int		1856
//sect
sectorsX1	[14]	int		832
sectorsY1	[14]	int		1344
sectorsX2	[14]	int		2496
sectorsY2	[14]	int		3392
//sect
sectorsX1	[15]	int		1600
sectorsY1	[15]	int		3520
sectorsX2	[15]	int		2496
sectorsY2	[15]	int		4544
//sect
sectorsX1	[16]	int		832
sectorsY1	[16]	int		1344
sectorsX2	[16]	int		1728
sectorsY2	[16]	int		2880
*/

/* ********************************************	*/
/* Enemy Base Blips */
/* ********************************************	*/
numBases		int		3		//MAX = 5. Must be same as number of bases listed next

basePlayer	[0]	int		0		//enemy player number who owns base
baseMsg	[0]	INTMESSAGE	"CM3C_BASE1"	//enemy base blip message (prox.txt)
baseRegion	[0]	int		0		//index to regions
baseWav1	[0]	int		0
baseWav2	[0]	int		3		//index to baseSnd	Eradicated

basePlayer	[1]	int		0
baseMsg	[1]	INTMESSAGE	"CM3C_BASE2"
baseRegion	[1]	int		1
baseWav1	[1]	int		0		//index to baseSnd	enemy detected
baseWav2	[1]	int		3		//index to baseSnd	Eradicated

basePlayer	[2]	int		0
baseMsg	[2]	INTMESSAGE	"CM3C_BASE3"
baseRegion	[2]	int		2
baseWav1	[2]	int		0
baseWav2	[2]	int		3		//index to baseSnd	Eradicated

/* ********************************************	*/
/* Enemy Groups */
/* ********************************************	*/
numGroups		int		3	//group MAX = 10

//NorthEast Cyborgs
grpType		[0]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[0]	int		0		//player number (NP)
grpRegion		[0]	int		0		//index in regions array
grpTimeGo		[0]	int		30		//5mins. (always make >= 0 for defence forces)
grpRegionGo		[0]	int		2		//gamma base region for trigger (assume WhoGo = 0)
grpWhoGo		[0]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[0]	int		90		//don't set morale/leadership/retreat
grpLeadership	[0]	int		0		//leadership value
grpRetreatXY	[0]	int		0		//retreat to base 1 assembly
grpPosStart		[0]	int		3		//index in coords/sectors array (depends on grpType)
grpPosMin		[0]	int		0		//Minimum index in coords array
grpPosMax		[0]	int		4		//Maximum index in coords array
grpPosStep		[0]	int		1		//Step increase for next 'waypoint'
grpPosType		[0]	int		3		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[0]	int		1		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[0]	int		6		//ideal size. If less than this factory will reinforce

//East Cyborgs
grpType		[1]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[1]	int		0		//player number (NP)
grpRegion		[1]	int		1		//index in regions array
grpTimeGo		[1]	int		60		//10mins time trigger (always make >= 0 for defence forces)
grpRegionGo		[1]	int		2		//gamma base region for trigger (assume WhoGo = 0)
grpWhoGo		[1]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[1]	int		90		//very timid! morale = 1%
grpLeadership	[1]	int		0		//leadership value
grpRetreatXY	[1]	int		0		//retreat (index in coords array) base1 assembly
grpPosStart		[1]	int		0		//index in sectors array (depends on grpType)
grpPosMin		[1]	int		0		//Minimum index in coords array
grpPosMax		[1]	int		4		//Maximum index in coords array
grpPosStep		[1]	int		1		//Step increase for next 'waypoint'
grpPosType		[1]	int		2		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[1]	int		2		//index structure to reinforce group. -1 = any factory.
grpIdealSize	[1]	int		10		//ideal size. If less than this factory will reinforce

//hover Attackers
grpType		[2]	int		3		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[2]	int		0		//player number (NP)
grpRegion		[2]	int		-1		//index in regions array
grpTimeGo		[2]	int		90		//15mins time trigger (always make >= 0 for defence forces)
grpRegionGo		[2]	int		2		//no region. index in regions array as trigger
grpWhoGo		[2]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[2]	int		90		//morale = 25%
grpLeadership	[2]	int		0		//leadership value = 75%
grpRetreatXY	[2]	int		0		//retreat (index in SECTORs array) base2 assembly
grpPosStart		[2]	int		0		//index in coords array (depends on grpType)
grpPosMin		[2]	int		0		//Minimum index in coords array
grpPosMax		[2]	int		11		//Maximum index in coords array
grpPosStep		[2]	int		1		//Step increase for next 'waypoint'
grpPosType		[2]	int		2		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[2]	int		0		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[2]	int		10		//ideal size. If less than this factory will reinforce

//Main base defenders (for overspill)
grpType		[3]	int		1		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[3]	int		-1		//player number (NP)
grpRegion		[3]	int		-1		//index in regions array
grpTimeGo		[3]	int		0		//10s time trigger (always make >= 0 for defence forces)
grpRegionGo		[3]	int		5		//no region. index in regions array as trigger
grpWhoGo		[3]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[3]	int		90		//pretty timid! morale = 25%
grpLeadership	[3]	int		50		//leadership value = 0%
grpRetreatXY	[3]	int		1		//retreat (index in coords array) base 2 assembly
grpPosStart		[3]	int		0		//index in coords array (depends on grpType)
grpPosMin		[3]	int		0		//Minimum index in coords array
grpPosMax		[3]	int		1		//Maximum index in coords array
grpPosStep		[3]	int		1		//Step increase for next 'waypoint'
grpPosType		[3]	int		1		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[3]	int		-1		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[3]	int		20		//ideal size. If less than this factory will reinforce

/* reuse
grpType		[4]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[4]	int		7		//player number (NP)
grpRegion		[4]	int		10		//index in regions array
grpTimeGo		[4]	int		5		//20s time trigger (always make >= 0 for defence forces)
grpRegionGo		[4]	int		-1		//no region. index in regions array as trigger
grpWhoGo		[4]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[4]	int		90		//morale = 50%
grpLeadership	[4]	int		50		//leadership value = 75%
grpRetreatXY	[4]	int		1		//retreat (index in coords array) base2 assembly
grpPosStart		[4]	int		3		//index in coords array (depends on grpType)
grpPosMin		[4]	int		3		//Minimum index in coords array
grpPosMax		[4]	int		4		//Maximum index in coords array
grpPosStep		[4]	int		1		//Step increase for next 'waypoint'
grpPosType		[4]	int		1		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[4]	int		-1		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[4]	int		6		//ideal size. If less than this factory will reinforce

//radar tower defenders
grpType		[5]	int		1		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[5]	int		7		//player number (NP)
grpRegion		[5]	int		11		//index in regions array
grpTimeGo		[5]	int		0		//20s time trigger (always make >= 0 for defence forces)
grpRegionGo		[5]	int		12		//index in regions array as protect region
grpWhoGo		[5]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[5]	int		25		//morale = 50%
grpLeadership	[5]	int		50		//leadership value = 75%
grpRetreatXY	[5]	int		1		//retreat (index in coords array) base2 assembly
grpPosStart		[5]	int		-1		//-1 = no waypoints. index in coords array (depends on grpType)
grpPosMin		[5]	int		-1		//Minimum index in coords array
grpPosMax		[5]	int		-1		//Maximum index in coords array
grpPosStep		[5]	int		0		//Step increase for next 'waypoint'
grpPosType		[5]	int		0		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[5]	int		0		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[5]	int		0		//ideal size. If less than this factory will reinforce

//hillgroup
grpType		[6]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[6]	int		7		//player number (NP)
grpRegion		[6]	int		2		//index in regions array (same as base region)
grpTimeGo		[6]	int		-1		//20s time trigger (always make >= 0 for defence forces)
grpRegionGo		[6]	int		5		//no region. index in regions array as trigger
grpWhoGo		[6]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[6]	int		90		//morale = 50%
grpLeadership	[6]	int		50		//leadership value = 75%
grpRetreatXY	[6]	int		2		//retreat (index in coords array) base3 assembly
grpPosStart		[6]	int		5		//index in coords array (depends on grpType)
grpPosMin		[6]	int		5		//Minimum index in coords array
grpPosMax		[6]	int		8		//Maximum index in coords array
grpPosStep		[6]	int		1		//Step increase for next 'waypoint'
grpPosType		[6]	int		2		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[6]	int		2		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[6]	int		3		//ideal size. If less than this factory will reinforce
*/

/* Factories */
numFactories		int		3		//MAX = 10

// South base Heavy factory
factID		[0]	int		0		//index to structures
factAssXY		[0]	int		-1		//index to assembly point. -1 for don't set
factTimeGo		[0]	int		90		//15mindelay before starting production in 10s
factRegionGo	[0]	int		2		//gamma base region for trigger (assume WhoGo = 0)
factTempMin		[0]	int		3		//index to starting template
factTempMax		[0]	int		6		//index to maximum template
factEvery		[0]	int		42		//7mins .Time in 10s for factory to try to produce again

// North base cyborg factory
factID		[1]	int		1		//index to structures
factAssXY		[1]	int		-1		//index to assembly point. -1 for don't set
factTimeGo		[1]	int		30		//5min delay before starting production in 10s
factRegionGo	[1]	int		2		//gamma base region for trigger (assume WhoGo = 0)
factTempMin		[1]	int		0		//index to starting template
factTempMax		[1]	int		2		//index to maximum template
factEvery		[1]	int		18		//3mins .Time in 10s for factory to try to produce again

// South Base cyborg factory
factID		[2]	int		3		//index to structures
factAssXY		[2]	int		-1		//index to assembly point. -1 for don't set
factTimeGo		[2]	int		60		//10min delay before starting production in 10s
factRegionGo	[2]	int		2		//gamma base region for trigger (assume WhoGo = 0)
factTempMin		[2]	int		0		//index to starting template
factTempMax		[2]	int		2		//index to maximum template
factEvery		[2]	int		30		//5mins .Time in 10s for factory to try to produce again

/* 'Globals' */
//These should be same in each file, but may need slight alterations
player		int		0				//player's player number
crate		FEATURESTAT	"Crate"
artRange	int		200	//171				//range to artifact about 1.5 tiles
objectiveRange	int		640				//range to objective 5 Tiles
wayRange	int		300				//range to waypoint 2ish tiles
targetRange	int		768				//range for target spotting
targetMax	int		4				//maximum number of targets to store for each enemy
lostSnd		SOUND		"pcv470.ogg"		//mission failed
attackSnd1	SOUND		"pcv337.ogg"	//Base Under Attack
artSnd1		SOUND		"pcv351.ogg"	//artifact sounds
artSnd2		SOUND		"pcv352.ogg"
transporter	TEMPLATE	"Transporter"	//for enemy transports

//base WAVs. MAX = 5
baseSnd[0]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[1]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[2]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[3]	SOUND		"pcv394.ogg"	//Enemy base eradicated

}
