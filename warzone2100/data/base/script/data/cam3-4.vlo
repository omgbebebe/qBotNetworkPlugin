//Generic VLO file template for start/expand levels

//Cam3-4.vlo

script "GenExp.slo"
run
{
/* Next level stuff */
//This is the last level!
//NextLev		LEVEL		"CAM3C"	//points to next level
lastLev		BOOL		TRUE		//don't try to load next one

/* Define Players/Enemies */
numEnemies	int		1		//MAX 2. Must define same as number of enemy players given next
enemy[0]	int		3
alliancePlayer	int		0		//ally player with self (could be a different player number
allianceEnemy[0]	int	3		//ally enemy with self (could be a different player number
allianceFlag	BOOL		FALSE		//TRUE if want enemies to ally, otherwise mark FALSE

/* Starting Enemy Power */
power[0]	int		50000		//starting power values for each enemy listed above
//power[1]	int		1000
healthRetreat[0]	int		70
healthRetreatX[0]	int		1728		//default retreat for non-group units
healthRetreatY[0]	int		11456		//HQ
runOffFlag		BOOL		TRUE

/* Structure Limits */
numStrucStats	int	6			//MAX 5. Must be same as number of limits given next
strucStat[0]	STRUCTURESTAT	"A0PowerGenerator"
strucLimit[0]	int		0
strucStat[1]	STRUCTURESTAT	"A0ResourceExtractor"
strucLimit[1]	int		0
strucStat[2]	STRUCTURESTAT	"A0ResearchFacility"
strucLimit[2]	int		0
strucStat[3]	STRUCTURESTAT	"A0LightFactory"
strucLimit[3]	int		0
strucStat[4]	STRUCTURESTAT	"A0CommandCentre"
strucLimit[4]	int		0
strucStat[5]	STRUCTURESTAT	"A0ComDroidControl"
strucLimit[5]	int		0

/* Initialisation */
centreX		int		11200	//11456	//starting view centre (in world units)
centreY		int		1472	//1344
scrollX1	int		0		//scroll limits (in tile units)
scrollY1	int		0
scrollX2	int		96
scrollY2	int		96
zoomLevel	int		0	//starting radar: 0=zoomed out, 2=zoomed in

numLZ		int		1	//MAX 8. Number of Landing zones/areas can't build on (0 = LZ)
LZX[0]		int		87	//89	//coords of LZs in tile units
LZY[0]		int		11	//10

/* Transport exit and entry */
transX[0]	int		92	//entry coords
transY[0]	int		12
transX[1]	int		92	//exit coords
transY[1]	int		12

ReinforceTime	INT		600	// (1 minute) number of seconds*10 for transport, -1 for no reinforcements

/* starting technology for enemy */
//NOTE: need to set first number in array for enemy player
//second number needs to correspond to numTechs[enemy]
//MAX 2 enemies, 10 technologies
numTechs[0]	int		27
startTech	[0]	[0]	RESEARCHSTAT	"R-Defense-WallUpgrade09"
startTech	[0]	[1]	RESEARCHSTAT	"R-Struc-Materials09"
startTech	[0]	[2]	RESEARCHSTAT	"R-Struc-Factory-Upgrade06"
startTech	[0]	[3]	RESEARCHSTAT	"R-Struc-Factory-Cyborg-Upgrade06"
startTech	[0]	[4]	RESEARCHSTAT	"R-Struc-VTOLFactory-Upgrade06"
startTech	[0]	[5]	RESEARCHSTAT	"R-Struc-VTOLPad-Upgrade06"
startTech	[0]	[6]	RESEARCHSTAT	"R-Vehicle-Engine09"
startTech	[0]	[7]	RESEARCHSTAT	"R-Vehicle-Metals09"
startTech	[0]	[8]	RESEARCHSTAT	"R-Cyborg-Metals09"
startTech	[0]	[9]	RESEARCHSTAT	"R-Vehicle-Armor-Heat06"
startTech	[0]	[10]	RESEARCHSTAT	"R-Cyborg-Armor-Heat06"
startTech	[0]	[11]	RESEARCHSTAT	"R-Sys-Engineering03"
startTech	[0]	[12]	RESEARCHSTAT	"R-Vehicle-Prop-Hover02"
startTech	[0]	[13]	RESEARCHSTAT	"R-Vehicle-Prop-VTOL02"
startTech	[0]	[14]	RESEARCHSTAT	"R-Wpn-Bomb-Accuracy03"
startTech	[0]	[15]	RESEARCHSTAT	"R-Wpn-Energy-Accuracy01"
startTech	[0]	[16]	RESEARCHSTAT	"R-Wpn-Energy-Damage03"
startTech	[0]	[17]	RESEARCHSTAT	"R-Wpn-Energy-ROF03"
startTech	[0]	[18]	RESEARCHSTAT	"R-Wpn-Missile-Accuracy02"
startTech	[0]	[19]	RESEARCHSTAT	"R-Wpn-Missile-Damage03"
startTech	[0]	[20]	RESEARCHSTAT	"R-Wpn-Missile-ROF03"
startTech	[0]	[21]	RESEARCHSTAT	"R-Wpn-Rail-Accuracy01"
startTech	[0]	[22]	RESEARCHSTAT	"R-Wpn-Rail-Damage03"
startTech	[0]	[23]	RESEARCHSTAT	"R-Wpn-Rail-ROF03"
startTech	[0]	[24]	RESEARCHSTAT	"R-Sys-Sensor-Upgrade01"
startTech	[0]	[25]	RESEARCHSTAT	"R-Sys-NEXUSrepair"
startTech	[0]	[26]	RESEARCHSTAT	"R-Wpn-Flamer-Damage06"

/* Briefings */
numBriefs	int		2	//MAX 5. Needs to be same as the number of briefings given next
brief[0]	INTMESSAGE	"MB3_4_MSG3"
brief[1]	INTMESSAGE	"MB3_4_MSG2"
briefVal[0]	int		0	//0 remove after playing, 1 keep, 2 don't play immediately
briefVal[1]	int		2	//0 remove after playing, 1 keep, 2 don't play immediately
endMsg		INTMESSAGE	"END"

/* Objectives */
numObjectives	int		1	//MAX 3. Needs to be the same as the number of objective blips given next
//done as a base blip as well for now
objective[0]	INTMESSAGE	"CM34_OBJ1"
objectiveX[0]	int		1984	//doesn't use index to array, use world coords
objectiveY[0]	int		10688

/* Victory Conditions */
//NOTE: always assumes victory condition of: number of artifacts collected = victoryArt
numVictory	int		1	//number of victory conditions to be met (not including artifacts)
					//DOESN'T need to be same as number given next (these are set TRUE/FALSE)
					//if victory condition required. Can have 2 set to TRUE and numVictory = 1
					//This will then let player win if EITHER condition is true!
					//Use numVictory of 0 if just want player to get artifacts

//these now done as integers NOT bools!! Use -1 for False, # for True (often an index to check!)
//for this reason must specify ALL victory[]!
victory[0]	int		1	//all enemy vehicles and structures need to be killed
victory[1]	int		-1	//all players vehicles at REGION index # (eg LZ REGION)
victory[2]	int		-1	//number of objectives to get to (uses objective[0] to objective[#])
victory[3]	int		1	//number of bases to destroy (uses base[0] to base[#])

/* Failure Conditions */
//Extra conditions above ALL player units and structures dead, or TIME LIMIT expired
//Use -1 for False, # for True (often an index to check!)
fail	[0]	int		-1	//droid # index all got to REGION
fail	[1]	int		-1	//REGION index for above (these count as one condition!)

/* Artifacts */
victoryArt	int		0	//number of artifacts required for victory (must be <= numArt)
numArt	int		3	//MAX 6. Number of artifacts in total (even if not in game, but added as extra research!)

//new improved way of doing artifacts
//artType: 0 = artifact starts on map, 1 = get from STRUCTURE, 2 = get from FEATURE, 3 = get from DROID, 4 = at end of level
//artVal: index to relevant type, ie FEATURE(crate), FEATURE, STRUCTURE, DROID
//artX, artY: artifact coords (this is updated for DROIDS moving by script, but still needs an array to store them in!)

artType	[0]	int		1				//Cyborg Factory NW
artVal	[0]	int		6				
artX		[0]	int		832
artY		[0]	int		1216
artComp	[0]	RESEARCHSTAT	"R-Wpn-RailGun03"

artType	[1]	int		1
artVal	[1]	int		2				//NE Factory
artX		[1]	int		9024
artY		[1]	int		3776
artComp	[1]	RESEARCHSTAT	"R-Vehicle-Body10"

artType	[2]	int		1				//MultiMissEmp SE
artVal	[2]	int		10
artX		[2]	int		11072
artY		[2]	int		11200
artComp	[2]	RESEARCHSTAT	"R-Wpn-HvArtMissile"

/*reuse
artType	[3]	int		1				//Power Generator SE
artVal	[3]	int		12
artX		[3]	int		10432
artY		[3]	int		11328
artComp	[3]	RESEARCHSTAT	"R-Struc-Power-Upgrade02"

artType	[4]	int		1
artVal	[4]	int		3				//get this from base 3 factory
artX	[4]	int		4928
artY	[4]	int		6464
artComp	[4]	RESEARCHSTAT	"CAM3RESEARCH" //"R-Wpn-Mortar01Lt"

artType	[5]	int		1				//get this from bunker
artVal	[5]	int		4				
artX	[5]	int		3136
artY	[5]	int		3904
artComp	[5]	RESEARCHSTAT	"CAM3RESEARCH" //"R-Sys-Engineering01"		//"R-Wpn-MG-Damage01"
*/


/* ********************************************	*/
/* lists of stuff referred to by index number 	*/
/* ********************************************	*/

/* ********************************************	*/
/* FEATURES (inc crates, by ID number)	MAX = 10	*/
//features	[0]	FEATURE		649		//crate artifact (1st in valley)
//features	[1]	FEATURE		661		//crate artifact (2nd by huts) (CHANGED TO BUNKER)

/* ********************************************	*/
/* STRUCTURES (by ID number)		MAX = 10	*/
structures	[0]	STRUCTURE	724		//NW Base A Factory 1
structures	[1]	STRUCTURE	751		//NW Base A Factory 2
structures	[2]	STRUCTURE	729		//NE Base B Factory
structures	[3]	STRUCTURE	812		//SW Base C Factory
structures	[4]	STRUCTURE	733		//SE Base D Factory
structures	[5]	STRUCTURE	748		//Base E VTOL Factory (artifact only)
structures	[6]	STRUCTURE	1288		//NW base Cyborg factory
structures	[7]	STRUCTURE	746		//Base E VTOL Factory (artifact only)
structures	[8]	STRUCTURE	238		//SW Base F Cyborg Factory
structures	[9]	STRUCTURE	246		//SW Base F Cyborg Factory
structures	[10]	STRUCTURE	1235		//MultiArtMissEmp (artifact)
//structures	[12]	STRUCTURE	324		//Power Generator SE (artifact)


/* ********************************************	*/
/* DROIDS (by ID number)		MAX = 10	*/
droids		[0]	DROID		755		//truck
droids		[1]	DROID		756		//truck
droids		[2]	DROID		757		//truck
droids		[3]	DROID		758		//truck

/* ********************************************	*/
/* list of templates (by name)		 MAX = 20	*/
/* ********************************************	*/

//cyborg factories
templates	[0]	TEMPLATE	"NX-Cyb-Rail1-JUMP"
templates	[1]	TEMPLATE	"NX-Cyb-Miss-JUMP"
templates	[2]	TEMPLATE	"NX-Cyb-PulseLas-JUMP"

//link factory
templates	[3]	TEMPLATE	"NX-L-Link-Hov"
templates	[4]	TEMPLATE	"NX-M-Link-Hover"

//other factories
templates	[5]	TEMPLATE	"NX-H-Rail3-Hover"
templates	[6]	TEMPLATE	"NX-M-PulseLas-Hover"
templates	[7]	TEMPLATE	"NX-M-Missile-A-T-Hover"
templates	[8]	TEMPLATE	"NX-M-HvSam-Hover"
templates	[9]	TEMPLATE	"NX-M-Strike-Hover"

/* Templates available for this level */
/*
//Trucks
TEMPLATE	"NX-M-Con-Hover" 
//Repairs
TEMPLATE	"NX-L-Repair-Hover"
//Sensors
TEMPLATE	"NX-L-Sens-Hov"
TEMPLATE	"NX-H-CBS-Hover"
TEMPLATE	"NX-M-VTOLCBS-Hover"
//Commanders
TEMPLATE	"NX-M-Com-Hover"
//Electronic warfare - takeover
TEMPLATE	"NX-M-Link-Hover"
//Tanks
TEMPLATE	"NX-M-Missile-A-T-Hover"
TEMPLATE	"NX-M-PulseLas-Hover"
TEMPLATE	"NX-M-Rail2-Hover"
TEMPLATE	"NX-L-Missile-MdArt-Hover"
TEMPLATE	"NX-M-Strike-Hover"
TEMPLATE	"NX-H-Com-Hover"			//(NOT DESIGNED YET!!!)
TEMPLATE	"NX-H-HvMiss-Hover"
TEMPLATE	"NX-H-BeamLas-Hover"
TEMPLATE	"NX-H-Rail3-Hover"
//Cyborgs
TEMPLATE	"NX-Cyb-Rail1-JUMP"
TEMPLATE	"NX-Cyb-Miss-JUMP"
TEMPLATE	"NX-Cyb-PulseLas-JUMP"
//VTOLS
TEMPLATE	"NX-L-Missile-A-T-VTOL"
TEMPLATE	"NX-L-Rail1-VTOL"
TEMPLATE	"NX-L-PulseLas-VTOL"
TEMPLATE	"NX-H-Rail2-VTOL"
*/

/* ********************************************	*/
//coordinates (world coords)		MAX = 10
/* ********************************************	*/

coordsX		[0]	int		1728		//SW retreat
coordsY		[0]	int		11456

coordsX		[1]	int		1600		//SW patrol1
coordsY		[1]	int		8000
coordsX		[2]	int		4160		//SW patrol2
coordsY		[2]	int		8128
coordsX		[3]	int		5056		//SW patrol3
coordsY		[3]	int		10560


coordsX		[4]	int		10432		//SE retreat
coordsY		[4]	int		11456

coordsX		[5]	int		11328		//SE patrol1
coordsY		[5]	int		6976
coordsX		[6]	int		10432		//SE patrol2
coordsY		[6]	int		9664


coordsX		[7]	int		8896		//NE retreat
coordsY		[7]	int		4032

coordsX		[8]	int		9408		//NE patrol1
coordsY		[8]	int		5184
coordsX		[9]	int		4800		//NE patrol2
coordsY		[9]	int		5696


coordsX		[10]	int		1344		//NW retreat
coordsY		[10]	int		1600

coordsX		[11]	int		5824		//NW patrol1
coordsY		[11]	int		832
coordsX		[12]	int		2496		//NW patrol2
coordsY		[12]	int		2624
coordsX		[13]	int		704		//NW patrol3
coordsY		[13]	int		4160


/* ********************************************	*/
//regions (world coords)		MAX = 20
/* ********************************************	*/
regionsX1	[0]	int		192		//NW base defense zone
regionsY1	[0]	int		192
regionsX2	[0]	int		6336
regionsY2	[0]	int		1216

regionsX1	[1]	int		6336		//NE base defense zone
regionsY1	[1]	int		1984
regionsX2	[1]	int		9408
regionsY2	[1]	int		9024

regionsX1	[2]	int		192		//SW base defense zone
regionsY1	[2]	int		7232
regionsX2	[2]	int		5440
regionsY2	[2]	int		11968
	
regionsX1	[3]	int		9408		//SE base defense zone
regionsY1	[3]	int		6976
regionsX2	[3]	int		12096
regionsY2	[3]	int		12096	

/* reuse
regionsX1	[4]	int		5696		//enemy base E blip
regionsY1	[4]	int		10176
regionsX2	[4]	int		8256
regionsY2	[4]	int		11840

regionsX1	[5]	int		320			//enemy base F blip
regionsY1	[5]	int		7744
regionsX2	[5]	int		4672
regionsY2	[5]	int		11968	

regionsX1	[6]	int		10816		//enemy base G blip
regionsY1	[6]	int		6976
regionsX2	[6]	int		11712
regionsY2	[6]	int		7744	
*/

/* ********************************************	*/
/* sector Stuff */
/* ********************************************	*/
//sectors to attack (covers 1A-C expansion area, in order of priority to attack)
//MAX = 20
//SW
sectorsX1	[0]	int		192
sectorsY1	[0]	int		6464
sectorsX2	[0]	int		6080
sectorsY2	[0]	int		12096
//SE
sectorsX1	[1]	int		6080
sectorsY1	[1]	int		6464
sectorsX2	[1]	int		12096
sectorsY2	[1]	int		12096
//NE
sectorsX1	[2]	int		6080
sectorsY1	[2]	int		192
sectorsX2	[2]	int		12096
sectorsY2	[2]	int		6464
//NW
sectorsX1	[3]	int		192
sectorsY1	[3]	int		192
sectorsX2	[3]	int		6080
sectorsY2	[3]	int		6464

/*reuse
sectorsX1	[4]	int		1600
sectorsY1	[4]	int		10176
sectorsX2	[4]	int		5952
sectorsY2	[4]	int		12608
//sect
sectorsX1	[5]	int		4672
sectorsY1	[5]	int		8640
sectorsX2	[5]	int		5696
sectorsY2	[5]	int		10048
//sect
sectorsX1	[6]	int		4160
sectorsY1	[6]	int		6464
sectorsX2	[6]	int		5056
sectorsY2	[6]	int		8512
//sect (base)
sectorsX1	[7]	int		832
sectorsY1	[7]	int		6336
sectorsX2	[7]	int		3392
sectorsY2	[7]	int		7104
//sect
sectorsX1	[8]	int		4800
sectorsY1	[8]	int		5056
sectorsX2	[8]	int		6208
sectorsY2	[8]	int		6208
//sect
sectorsX1	[9]	int		3392
sectorsY1	[9]	int		4672
sectorsX2	[9]	int		4160
sectorsY2	[9]	int		5440
//sect
sectorsX1	[10]	int		5056
sectorsY1	[10]	int		4160
sectorsX2	[10]	int		5312
sectorsY2	[10]	int		4928
//sect
sectorsX1	[11]	int		4032
sectorsY1	[11]	int		1216
sectorsX2	[11]	int		6208
sectorsY2	[11]	int		3264
//sect
sectorsX1	[12]	int		3392
sectorsY1	[12]	int		832
sectorsX2	[12]	int		3776
sectorsY2	[12]	int		1472
//sect
sectorsX1	[13]	int		2624
sectorsY1	[13]	int		1600
sectorsX2	[13]	int		3392
sectorsY2	[13]	int		1856
//sect
sectorsX1	[14]	int		832
sectorsY1	[14]	int		1344
sectorsX2	[14]	int		2496
sectorsY2	[14]	int		3392
//sect
sectorsX1	[15]	int		1600
sectorsY1	[15]	int		3520
sectorsX2	[15]	int		2496
sectorsY2	[15]	int		4544
//sect
sectorsX1	[16]	int		832
sectorsY1	[16]	int		1344
sectorsX2	[16]	int		1728
sectorsY2	[16]	int		2880
*/

/* ********************************************	*/
/* Enemy Base Blips */
/* ********************************************	*/
numBases		int		1	//7		//MAX = 5. Must be same as number of bases listed next

basePlayer	[0]	int		0		//enemy player number who owns base
baseMsg	[0]	INTMESSAGE	"CM34_OBJ2"	//enemy base blip message (prox.txt)
baseRegion	[0]	int		2		//index to regions
baseWav1	[0]	int		0
baseWav2	[0]	int		3		//index to baseSnd	Eradicated

/* NO BASES SINCE GIVES PLAYER POSITION WHEN ARTILLERY FIRES
basePlayer	[1]	int		0
baseMsg		[1]	INTMESSAGE	"CM34_BASEB"
baseRegion	[1]	int		1
baseWav1	[1]	int		0		//index to baseSnd	enemy detected
baseWav2	[1]	int		3		//index to baseSnd	Eradicated

basePlayer	[2]	int		0
baseMsg		[2]	INTMESSAGE	"CM34_BASEC"
baseRegion	[2]	int		2
baseWav1	[2]	int		0		//index to baseSnd	enemy detected
baseWav2	[2]	int		3		//index to baseSnd	Eradicated

basePlayer	[3]	int		0
baseMsg		[3]	INTMESSAGE	"CM34_BASED"
baseRegion	[3]	int		3
baseWav1	[3]	int		0
baseWav2	[3]	int		3		//index to baseSnd	Eradicated

basePlayer	[4]	int		0
baseMsg		[4]	INTMESSAGE	"CM34_BASEE"
baseRegion	[4]	int		4
baseWav1	[4]	int		0
baseWav2	[4]	int		3

basePlayer	[5]	int		0
baseMsg		[5]	INTMESSAGE	"CM34_BASEF"
baseRegion	[5]	int		5
baseWav1	[5]	int		0
baseWav2	[5]	int		3

basePlayer	[6]	int		0
baseMsg		[6]	INTMESSAGE	"CM34_BASEG"
baseRegion	[6]	int		6
baseWav1	[6]	int		0
baseWav2	[6]	int		3
*/

/* ********************************************	*/
/* Enemy Groups */
/* ********************************************	*/
numGroups		int		6	//group MAX = 10

//link Scouts
grpType		[0]	int		2		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[0]	int		0		//player number (NP)
grpRegion		[0]	int		-1		//index in regions array
grpTimeGo		[0]	int		1		//10s. (always make >= 0 for defence forces)
grpRegionGo		[0]	int		-1		//index in regions array as trigger
grpWhoGo		[0]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[0]	int		90		//don't set morale/leadership/retreat
grpLeadership	[0]	int		0		//leadership value
grpRetreatXY	[0]	int		0		//retreat to base 1 assembly
grpPosStart		[0]	int		0		//index in coords/sectors array (depends on grpType)
grpPosMin		[0]	int		0		//Minimum index in coords array
grpPosMax		[0]	int		3		//Maximum index in coords array
grpPosStep		[0]	int		1		//Step increase for next 'waypoint'
grpPosType		[0]	int		3		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[0]	int		5		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[0]	int		12		//ideal size. If less than this factory will reinforce

//attackers
grpType		[1]	int		3		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[1]	int		0		//player number (NP)
grpRegion		[1]	int		-1		//index in regions array
grpTimeGo		[1]	int		30		//5mins time trigger (always make >= 0 for defence forces)
grpRegionGo		[1]	int		-1		//no region. index in regions array as trigger
grpWhoGo		[1]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[1]	int		90		//very timid! morale = 1%
grpLeadership	[1]	int		0		//leadership value
grpRetreatXY	[1]	int		0		//retreat (index in coords array) base1 assembly
grpPosStart		[1]	int		0		//index in sectors array (depends on grpType)
grpPosMin		[1]	int		0		//Minimum index in coords array
grpPosMax		[1]	int		3		//Maximum index in coords array
grpPosStep		[1]	int		1		//Step increase for next 'waypoint'
grpPosType		[1]	int		1		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[1]	int		-1		//index structure to reinforce group. -1 = any factory.
grpIdealSize	[1]	int		15		//ideal size. If less than this factory will reinforce

//NE defenders
grpType		[2]	int		1		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[2]	int		0		//player number (NP)
grpRegion		[2]	int		1		//index in regions array
grpTimeGo		[2]	int		0		//0s time trigger (always make >= 0 for defence forces)
grpRegionGo		[2]	int		1		//no region. index in regions array as trigger
grpWhoGo		[2]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[2]	int		90		//morale = 25%
grpLeadership	[2]	int		0		//leadership value = 75%
grpRetreatXY	[2]	int		7		//retreat (index in coords array) base2 assembly
grpPosStart		[2]	int		8		//index in coords array (depends on grpType)
grpPosMin		[2]	int		8		//Minimum index in coords array
grpPosMax		[2]	int		9		//Maximum index in coords array
grpPosStep		[2]	int		1		//Step increase for next 'waypoint'
grpPosType		[2]	int		1		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[2]	int		3		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[2]	int		10		//ideal size. If less than this factory will reinforce

//NW defenders
grpType		[3]	int		1		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[3]	int		0		//player number (NP)
grpRegion		[3]	int		0		//index in regions array
grpTimeGo		[3]	int		0		//10s time trigger (always make >= 0 for defence forces)
grpRegionGo		[3]	int		0		//no region. index in regions array as trigger
grpWhoGo		[3]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[3]	int		90		//pretty timid! morale = 25%
grpLeadership	[3]	int		0		//leadership value = 0%
grpRetreatXY	[3]	int		10		//retreat (index in coords array) base 2 assembly
grpPosStart		[3]	int		11		//index in coords array (depends on grpType)
grpPosMin		[3]	int		11		//Minimum index in coords array
grpPosMax		[3]	int		13		//Maximum index in coords array
grpPosStep		[3]	int		1		//Step increase for next 'waypoint'
grpPosType		[3]	int		3		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[3]	int		1		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[3]	int		10		//ideal size. If less than this factory will reinforce

//SE defenders
grpType		[4]	int		1		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[4]	int		0		//player number (NP)
grpRegion		[4]	int		3		//index in regions array
grpTimeGo		[4]	int		0		//20s time trigger (always make >= 0 for defence forces)
grpRegionGo		[4]	int		3		//no region. index in regions array as trigger
grpWhoGo		[4]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[4]	int		90		//morale = 50%
grpLeadership	[4]	int		0		//leadership value = 75%
grpRetreatXY	[4]	int		4		//retreat (index in coords array) base2 assembly
grpPosStart		[4]	int		5		//index in coords array (depends on grpType)
grpPosMin		[4]	int		5		//Minimum index in coords array
grpPosMax		[4]	int		6		//Maximum index in coords array
grpPosStep		[4]	int		1		//Step increase for next 'waypoint'
grpPosType		[4]	int		1		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[4]	int		4		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[4]	int		10		//ideal size. If less than this factory will reinforce

//SW defenders
grpType		[5]	int		1		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[5]	int		0		//player number (NP)
grpRegion		[5]	int		2		//index in regions array
grpTimeGo		[5]	int		0		//20s time trigger (always make >= 0 for defence forces)
grpRegionGo		[5]	int		2		//index in regions array as protect region
grpWhoGo		[5]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[5]	int		90		//morale = 50%
grpLeadership	[5]	int		0		//leadership value = 75%
grpRetreatXY	[5]	int		0		//retreat (index in coords array) base2 assembly
grpPosStart		[5]	int		2		//-1 = no waypoints. index in coords array (depends on grpType)
grpPosMin		[5]	int		1		//Minimum index in coords array
grpPosMax		[5]	int		3		//Maximum index in coords array
grpPosStep		[5]	int		1		//Step increase for next 'waypoint'
grpPosType		[5]	int		3		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[5]	int		-1		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[5]	int		15		//ideal size. If less than this factory will reinforce

/* reuse
//hillgroup
grpType		[6]	int		0		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[6]	int		7		//player number (NP)
grpRegion		[6]	int		2		//index in regions array (same as base region)
grpTimeGo		[6]	int		-1		//20s time trigger (always make >= 0 for defence forces)
grpRegionGo		[6]	int		5		//no region. index in regions array as trigger
grpWhoGo		[6]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[6]	int		90		//morale = 50%
grpLeadership	[6]	int		50		//leadership value = 75%
grpRetreatXY	[6]	int		2		//retreat (index in coords array) base3 assembly
grpPosStart		[6]	int		5		//index in coords array (depends on grpType)
grpPosMin		[6]	int		5		//Minimum index in coords array
grpPosMax		[6]	int		8		//Maximum index in coords array
grpPosStep		[6]	int		1		//Step increase for next 'waypoint'
grpPosType		[6]	int		2		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[6]	int		2		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[6]	int		3		//ideal size. If less than this factory will reinforce
*/

/* Factories */
numFactories		int		8		//MAX = 11

//NW base Factory 0
factID		[0]	int		0		//index to structures
factAssXY		[0]	int		-1		//index to assembly point. -1 for don't set
factTimeGo		[0]	int		60		//10mins delay before starting production in 10s
factRegionGo	[0]	int		0		//-1 = no region for trigger (assume WhoGo = 0)
factTempMin		[0]	int		5		//index to starting template
factTempMax		[0]	int		9		//index to maximum template
factEvery		[0]	int		72		//12mins .Time in 10s for factory to try to produce again

//NW base Factory 1
factID		[1]	int		1		//index to structures
factAssXY		[1]	int		-1		//index to assembly point. -1 for don't set
factTimeGo		[1]	int		90		//15mins delay before starting production in 10s
factRegionGo	[1]	int		-1		//-1 = no region for trigger (assume WhoGo = 0)
factTempMin		[1]	int		5		//index to starting template
factTempMax		[1]	int		9		//index to maximum template
factEvery		[1]	int		60		//10mins .Time in 10s for factory to try to produce again

//NW base Cyborg factory 6
factID		[2]	int		6		//index to structures
factAssXY		[2]	int		-1		//index to assembly point. -1 for don't set
factTimeGo		[2]	int		120		//20mins delay before starting production in 10s
factRegionGo	[2]	int		0		//-1 = no region for trigger (assume WhoGo = 0)
factTempMin		[2]	int		0		//index to starting template
factTempMax		[2]	int		2		//index to maximum template
factEvery		[2]	int		42		//7mins .Time in 10s for factory to try to produce again


//NE base Factory
factID		[3]	int		2		//index to structures
factAssXY		[3]	int		-1		//index to assembly point. -1 for don't set
factTimeGo		[3]	int		18		//3mins delay before starting production in 10s
factRegionGo	[3]	int		-1		//-1 = no region for trigger (assume WhoGo = 0)
factTempMin		[3]	int		5		//index to starting template
factTempMax		[3]	int		9		//index to maximum template
factEvery		[3]	int		60		//10mins .Time in 10s for factory to try to produce again


//SE base Factory
factID		[4]	int		4		//index to structures
factAssXY		[4]	int		-1		//index to assembly point. -1 for don't set
factTimeGo		[4]	int		180		//30 mins delay before starting production in 10s
factRegionGo	[4]	int		3		//-1 = no region for trigger (assume WhoGo = 0)
factTempMin		[4]	int		5		//index to starting template
factTempMax		[4]	int		9		//index to maximum template
factEvery		[4]	int		60		//10mins .Time in 10s for factory to try to produce again


//SW base Factory (main) (LINKS only!!)
factID		[5]	int		3		//index to structures
factAssXY		[5]	int		-1		//index to assembly point. -1 for don't set
factTimeGo		[5]	int		120		//20 mins delay before starting production in 10s
factRegionGo	[5]	int		2		//-1 = no region for trigger (assume WhoGo = 0)
factTempMin		[5]	int		3		//index to starting template
factTempMax		[5]	int		4		//index to maximum template
factEvery		[5]	int		60		//10mins .Time in 10s for factory to try to produce again

//SW base Cyborg Factory (main)
factID		[6]	int		8		//index to structures
factAssXY		[6]	int		-1		//index to assembly point. -1 for don't set
factTimeGo		[6]	int		180		//30 mins delay before starting production in 10s
factRegionGo	[6]	int		2		//-1 = no region for trigger (assume WhoGo = 0)
factTempMin		[6]	int		0		//index to starting template
factTempMax		[6]	int		2		//index to maximum template
factEvery		[6]	int		42		//7mins .Time in 10s for factory to try to produce again

//SW base Cyborg Factory (main)
factID		[7]	int		9		//index to structures
factAssXY		[7]	int		-1		//index to assembly point. -1 for don't set
factTimeGo		[7]	int		240		//40 mins delay before starting production in 10s
factRegionGo	[7]	int		-1		//-1 = no region for trigger (assume WhoGo = 0)
factTempMin		[7]	int		0		//index to starting template
factTempMax		[7]	int		2		//index to maximum template
factEvery		[7]	int		54		//9mins .Time in 10s for factory to try to produce again


/* 'Globals' */
//These should be same in each file, but may need slight alterations
player		int		0				//player's player number
crate		FEATURESTAT	"Crate"
artRange	int		200	//171				//range to artifact about 1.5 tiles
objectiveRange	int		640				//range to objective 5 Tiles
wayRange	int		300				//range to waypoint 2ish tiles
targetRange	int		768				//range for target spotting
targetMax	int		4				//maximum number of targets to store for each enemy
lostSnd		SOUND		"pcv470.ogg"		//mission failed
attackSnd1	SOUND		"pcv337.ogg"	//Base Under Attack
artSnd1		SOUND		"pcv351.ogg"	//artifact sounds
artSnd2		SOUND		"pcv352.ogg"

//base WAVs. MAX = 5
baseSnd[0]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[1]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[2]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[3]	SOUND		"pcv394.ogg"	//Enemy base eradicated

/* NEW STUFF for trucks */
trucksOn		BOOL			TRUE		//switch for using trucks (won't work without it!)
/* Defence Type Structures for any enemy to build */
numDefences		int			5	//MAX = 5
defences[0]		STRUCTURESTAT	"Sys-NEXUSLinkTOW"
defences[1]		STRUCTURESTAT	"P0-AASite-SAM2"
defences[2]		STRUCTURESTAT	"Emplacement-PrisLas"
defences[3]		STRUCTURESTAT	"NX-Tower-ATMiss"
defences[4]		STRUCTURESTAT	"Sys-NX-CBTower"

maxDefence		int			4		//ideal number of defences to build
/* structures to defend */
numToDefend		int			5	//MAX = 5
toDefend[0]		STRUCTURESTAT	"A0ResearchFacility"
toDefend[1]		STRUCTURESTAT	"NX-Emp-Plasma-Pit"
toDefend[2]		STRUCTURESTAT	"A0LightFactory"
toDefend[3]		STRUCTURESTAT	"P0-AASite-SAM2"
toDefend[4]		STRUCTURESTAT	"NX-Emp-MultiArtMiss-Pit"

/* extra Globals */
oilRes		FEATURESTAT		"OilResource"
truckRange		int			8192	//64 tiles range range for truck to check for defendable structures
defRange		int			512	//4 tiles range for defences to be for defendable structures
/* end of NEW STUFF */

}
