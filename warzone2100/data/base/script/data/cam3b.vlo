//Generic VLO file template for start/expand levels

//Cam3b.vlo

script "GenExp.slo"
run
{
/* Next level stuff */
NextLev		LEVEL		"SUB_3_2S"	//points to next level
// cut out sub map 3-2 for now
//NextLev		LEVEL		"CAM3A-B"	//points to next level

/* Define Players/Enemies */
numEnemies		int		2		//MAX 2. Must define same as number of enemy players given next
enemy[0]		int		3		//Nexus
enemy[1]		int		1		//Gamma
alliancePlayer	int		1		//ally player with Gamma
allianceEnemy[0]	int		1		//ally Nexus with Gamma
allianceEnemy[1]  int		3		//ally Gamma with Nexus
allianceFlag	BOOL		FALSE		//TRUE if want enemies to use each others targets, otherwise mark FALSE

/* Starting Enemy Power */
power[0]	int		20000		//starting power values for each enemy listed above
power[1]	int		20000

/*Health Retreat Level for each of the enemies listed above*/
healthRetreat[0]	int		80
healthRetreatX[0]	int		704		//default retreat for non-group units
healthRetreatY[0]	int		6592
runOffFlag		BOOL		TRUE
healthRetreat[1]	int		80
healthRetreatX[1]	int		1728		//default retreat for non-group units
healthRetreatY[1]	int		1472

/* Structure Limits */
numStrucStats	int	6			//MAX 5. Must be same as number of limits given next
strucStat[0]	STRUCTURESTAT	"A0PowerGenerator"
strucLimit[0]	int		4	//5
strucStat[1]	STRUCTURESTAT	"A0ResourceExtractor"
strucLimit[1]	int		200
strucStat[2]	STRUCTURESTAT	"A0ResearchFacility"
strucLimit[2]	int		4	//5
strucStat[3]	STRUCTURESTAT	"A0LightFactory"
strucLimit[3]	int		4	//5
strucStat[4]	STRUCTURESTAT	"A0CommandCentre"
strucLimit[4]	int		1
strucStat[5]	STRUCTURESTAT	"A0ComDroidControl"
strucLimit[5]	int		1

/* Initialisation */
centreX		int		7360	//starting view centre (in world units)
centreY		int		15296
scrollX1	int		0	//scroll limits (in tile units)
scrollY1	int		0
scrollX2	int		64
scrollY2	int		130
zoomLevel	int		0	//starting radar: 0=zoomed out, 2=zoomed in

numLZ		int		3	//MAX 8. Number of Landing zones/areas can't build on (0 = LZ)
LZX[0]		int		56	//coords of LZ in tile units
LZY[0]		int		120

LZX[1]		int		48	//Nexus transport1 (east)
LZY[1]		int		51	
LZX[2]		int		8	//Nexus transport2 (west)
LZY[2]		int		53	

ReinforceTime	INT		-1	//-1 for no reinforcements
timeLimit		INT		18000	//30mins for rescue part!

/* Transport exit and entry */
transX[0]	int		57
transY[0]	int		127
transX[1]	int		57
transY[1]	int		127

//for each enemy that requires enemy transports landing (handled as a phantom factory)
entryX[0]	int		63		//define transport entry exit for each enemy!
entryY[0]	int		4		//unnecessary if no enemy transports (defaults 0)
exitX	[0]	int		63		//leave as 0 if don't want a transport adding for this enemy
exitY	[0]	int		4

/* starting technology for enemy */
//NOTE: need to set first number in array for enemy player
//second number needs to correspond to numTechs[enemy]
//MAX 2 enemies, 10 technologies
numTechs[0]	int		25
startTech	[0]	[0]	RESEARCHSTAT	"R-Defense-WallUpgrade08"
startTech	[0]	[1]	RESEARCHSTAT	"R-Struc-Materials08"
startTech	[0]	[2]	RESEARCHSTAT	"R-Struc-Factory-Upgrade06"
startTech	[0]	[3]	RESEARCHSTAT	"R-Struc-Factory-Cyborg-Upgrade06"
startTech	[0]	[4]	RESEARCHSTAT	"R-Struc-VTOLFactory-Upgrade06"
startTech	[0]	[5]	RESEARCHSTAT	"R-Struc-VTOLPad-Upgrade06"
startTech	[0]	[6]	RESEARCHSTAT	"R-Vehicle-Engine09"
startTech	[0]	[7]	RESEARCHSTAT	"R-Vehicle-Metals06"
startTech	[0]	[8]	RESEARCHSTAT	"R-Cyborg-Metals07"
startTech	[0]	[9]	RESEARCHSTAT	"R-Vehicle-Armor-Heat05"
startTech	[0]	[10]	RESEARCHSTAT	"R-Cyborg-Armor-Heat05"
startTech	[0]	[11]	RESEARCHSTAT	"R-Sys-Engineering03"
startTech	[0]	[12]	RESEARCHSTAT	"R-Vehicle-Prop-Hover02"
startTech	[0]	[13]	RESEARCHSTAT	"R-Vehicle-Prop-VTOL02"
startTech	[0]	[14]	RESEARCHSTAT	"R-Wpn-Bomb-Accuracy03"
startTech	[0]	[15]	RESEARCHSTAT	"R-Wpn-Energy-Accuracy01"
startTech	[0]	[16]	RESEARCHSTAT	"R-Wpn-Energy-Damage01"
startTech	[0]	[17]	RESEARCHSTAT	"R-Wpn-Energy-ROF01"
startTech	[0]	[18]	RESEARCHSTAT	"R-Wpn-Missile-Accuracy01"
startTech	[0]	[19]	RESEARCHSTAT	"R-Wpn-Missile-Damage01"
startTech	[0]	[20]	RESEARCHSTAT	"R-Wpn-Rail-Damage02"
startTech	[0]	[21]	RESEARCHSTAT	"R-Wpn-Rail-ROF02"
startTech	[0]	[22]	RESEARCHSTAT	"R-Sys-Sensor-Upgrade01"
startTech	[0]	[23]	RESEARCHSTAT	"R-Sys-NEXUSrepair"
startTech	[0]	[24]	RESEARCHSTAT	"R-Wpn-Flamer-Damage06"

/* Briefings */
numBriefs	int		2	//MAX 5. Needs to be same as the number of briefings given next
brief[0]	INTMESSAGE	"MB3_B_MSG"
brief[1]	INTMESSAGE	"MB3_B_MSG2"
//brief[2]	INTMESSAGE	"MB3_B_MSG3"
briefVal[0]	int		0	//0 remove after playing, 1 keep, 2 don't play immediately
briefVal[1]	int		1	//0 remove after playing, 1 keep, 2 don't play immediately
//briefVal[2]	int		0	//0 remove after playing, 1 keep, 2 don't play immediately
endMsg		INTMESSAGE	"END"

/* Objectives */
numObjectives	int		1	//MAX 3. Needs to be the same as the number of objective blips given next
objective[0]	INTMESSAGE	"CM3B_GAMMABASE"
objectiveX[0]	int		1728	//doesn't use index to array, use world coords
objectiveY[0]	int		1728

/* Victory Conditions */
//NOTE: always assumes victory condition of: number of artifacts collected = victoryArt
numVictory	int		1	//number of victory conditions to be met (not including artifacts)
					//DOESN'T need to be same as number given next (these are set TRUE/FALSE)
					//if victory condition required. Can have 2 set to TRUE and numVictory = 1
					//This will then let player win if EITHER condition is true!
					//Use numVictory of 0 if just want player to get artifacts

//these now done as integers NOT bools!! Use -1 for False, # for True (often an index to check!)
//for this reason must specify ALL victory[]!
victory[0]	int		1	//all enemy vehicles and structures need to be killed
victory[1]	int		-1	//all players vehicles at REGION index # (eg LZ REGION)
victory[2]	int		-1	//number of objectives to get to (uses objective[0] to objective[#])
victory[3]	int		-1	//number of bases to destroy (uses base[0] to base[#])

/* Failure Conditions */
//Extra conditions above ALL player units and structures dead, or TIME LIMIT expired
//Use -1 for False, # for True (often an index to check!)
fail	[0]	int		-1	//group # index all got to REGION
fail	[1]	int		-1	//REGION index for above (these count as one condition!)

/* Artifacts */
victoryArt	int		5	//number of artifacts required for victory (must be <= numArt)
numArt	int		5	//MAX 6. Number of artifacts in total (even if not in game, but added as extra research!)

//new improved way of doing artifacts
//artType: 0 = artifact starts on map, 1 = get from STRUCTURE, 2 = get from FEATURE, 3 = get from DROID, 4 = at end of level
//artVal: index to relevant type, ie FEATURE(crate), FEATURE, STRUCTURE, DROID
//artX, artY: artifact coords (this is updated for DROIDS moving by script, but still needs an array to store them in!)
artType	[0]	int		1				//Gamma Base Research Fac
artVal	[0]	int		4				
artX		[0]	int		2496
artY		[0]	int		1216
artComp	[0]	RESEARCHSTAT	"R-Wpn-Mortar-Acc03"

artType	[1]	int		1				//Gamma Base Factory
artVal	[1]	int		1
artX		[1]	int		960
artY		[1]	int		1088
artComp	[1]	RESEARCHSTAT	"R-Wpn-Cannon-ROF04"

artType	[2]	int		1				//East LZ BeamLaser tower
artVal	[2]	int		0
artX		[2]	int		6336	//6720
artY		[2]	int		6848	//6464
artComp	[2]	RESEARCHSTAT	"R-Wpn-Laser01"

artType	[3]	int		1				//Nexus HQ (West)
artVal	[3]	int		5
artX		[3]	int		704
artY		[3]	int		6976
artComp	[3]	RESEARCHSTAT	"R-Struc-Research-Upgrade07"

artType	[4]	int		1			//Gamma HQ
artVal	[4]	int		6
artX		[4]	int		2240
artY		[4]	int		960
artComp	[4]	RESEARCHSTAT	"R-Vehicle-Body03"

/*reuse
artType	[5]	int		1				//get this from bunker
artVal	[5]	int		4				
artX	[5]	int		3136
artY	[5]	int		3904
artComp	[5]	RESEARCHSTAT	"CAM3RESEARCH" //"R-Sys-Engineering01"		//"R-Wpn-MG-Damage01"
*/

/* ********************************************	*/
/* lists of stuff referred to by index number 	*/
/* ********************************************	*/

/* ********************************************	*/
/* FEATURES (inc crates, by ID number)	MAX = 10	*/
//features	[0]	FEATURE		649		//crate artifact (1st in valley)
//features	[1]	FEATURE		661		//crate artifact (2nd by huts) (CHANGED TO BUNKER)

/* ********************************************	*/
/* STRUCTURES (by ID number)		MAX = 10	*/
structures	[0]	STRUCTURE	1181		//BeamLaser tower (artifact)
structures	[1]	STRUCTURE	432		//Gamma base factory
structures	[2]	STRUCTURE	134		//Gamma base cyborg Factory 1
//structures	[3]	STRUCTURE	135		//Gamma base cyborg Factory 2
structures	[4]	STRUCTURE	143		//Gamma base Research Fac (artifact)
structures	[5]	STRUCTURE	1180		//Nexus HQ(artifact)
structures	[6]	STRUCTURE	133		//Gamma HQ(artifact)

/* ********************************************	*/
/* DROIDS (by ID number)		MAX = 10	*/
//droids		[0]	DROID		3279		//testdroid

/* ********************************************	*/
/* list of templates (by name)		 MAX = 20	*/
/* ********************************************	*/
// gamma base templates  - (use player technology) [NEXUS TECH FOR NOW! It's a Cam# thing]
templates	[0]	TEMPLATE	"NX-M-Missile-A-T-Hover"
templates	[1]	TEMPLATE	"NX-M-Rail2-Hover"
templates	[2]	TEMPLATE	"NX-M-Missile-A-T-Hover"
//templates	[3]	TEMPLATE	"NX-M-Rail2-Hover"

// gamma base cyborg factories
templates	[4]	TEMPLATE	"NX-Cyb-Rail1-JUMP"
templates	[5]	TEMPLATE	"NX-Cyb-PulseLas-JUMP"
templates	[6]	TEMPLATE	"NX-Cyb-Miss-JUMP"

// base 4 medium factory templates & transport 1
templates	[7]	TEMPLATE	"NX-Cyb-Rail1-JUMP"
templates	[8]	TEMPLATE	"NX-Cyb-PulseLas-JUMP"
templates	[9]	TEMPLATE	"NX-M-HvSam-Hover"
templates	[10]	TEMPLATE	"NX-M-Rail2-Hover"

// transport 2 cyborgs
templates	[11]	TEMPLATE	"NX-Cyb-Rail1-JUMP"
templates	[12]	TEMPLATE	"NX-Cyb-PulseLas-JUMP"
templates	[13]	TEMPLATE	"NX-M-HvSam-Hover"
templates	[14]	TEMPLATE	"NX-M-Link-Hover"

// edgemap units
templates	[15]	TEMPLATE	"NX-Cyb-Rail1-JUMP"
templates	[16]	TEMPLATE	"NX-Cyb-PulseLas-JUMP"
templates	[17]	TEMPLATE	"NX-Cyb-Miss-JUMP"
templates	[18]	TEMPLATE	"NX-M-Link-Hover"


/* Templates available for this level */
/*
//Trucks
TEMPLATE	"NX-M-Con-Hover" 
//Repairs
TEMPLATE	"NX-L-Repair-Hover"
//Sensors
TEMPLATE	"NX-L-Sens-Hov"
TEMPLATE	"NX-H-CBS-Hover"			//NEW
//Commanders
TEMPLATE	"NX-M-Com-Hover"			//NEW
//Electronic warfare - takeover
TEMPLATE	"NX-M-Link-Hover"			//NEW
//Tanks
TEMPLATE	"NX-M-Missile-A-T-Hover"
TEMPLATE	"NX-M-PulseLas-Hover"
TEMPLATE	"NX-M-Rail2-Hover"		//NEW
TEMPLATE	"NX-L-Missile-MdArt-Hover"	//NEW
TEMPLATE	"NX-M-Strike-Hover"		//NEW
TEMPLATE	"NX-H-Com-Hover"			//NEW (NOT DESIGNED YET!!!)
//Cyborgs
TEMPLATE	"NX-Cyb-Rail1-JUMP"
TEMPLATE	"NX-Cyb-Miss-JUMP"
TEMPLATE	"NX-Cyb-PulseLas-JUMP"
//VTOLS
TEMPLATE	"NX-L-Missile-A-T-VTOL"
TEMPLATE	"NX-L-Rail1-VTOL"
*/

/* OLD
// gamma base templates  - (use player technology)
templates	[0]	TEMPLATE	"CobraLtCnTrks"
templates	[1]	TEMPLATE	"CobraHMGHalfTrack"
templates	[2]	TEMPLATE	"CobraMortarHalfTrack"

// base 4 medium factory templates & transport 1
templates	[3]	TEMPLATE	"NX-M-Missile-A-T-Hover"
templates	[4]	TEMPLATE	"NX-M-Missile-LtSAM-HT"
templates	[5]	TEMPLATE	"NX-M-Missile-A-T-Hover"

// gamma base cyborg factories
templates	[6]	TEMPLATE	"CyborgCannon01CGrd"
templates	[7]	TEMPLATE	"CyborgCannon01CGrd"
templates	[8]	TEMPLATE	"CyborgFlamer01CGrd"

// transport 2 cyborgs
templates	[9]	TEMPLATE	"NX-Cyb-Rail1-JUMP"
templates	[10]	TEMPLATE	"NX-Cyb-PulseLas-JUMP"
templates	[11]	TEMPLATE	"NX-Cyb-Miss-JUMP"
*/

/* ********************************************	*/
//coordinates (world coords)		MAX = 10
/* ********************************************	*/

coordsX		[0]	int		6464		//retreat point (East Trans1)
coordsY		[0]	int		7104

coordsX		[1]	int		64		//edge map factory
coordsY		[1]	int		10816

coordsX		[2]	int		704		//retreat point (West Trans1)
coordsY		[2]	int		6592
coordsX		[3]	int		5952		//NE corner of lake
coordsY		[3]	int		1856
coordsX		[4]	int		1728		//Gamma Base
coordsY		[4]	int		1472
coordsX		[5]	int		2496		//North end of pass
coordsY		[5]	int		6080

coordsX		[6]	int		4416		//South of ridge
coordsY		[6]	int		9152
coordsX		[7]	int		3520		//West ridge
coordsY		[7]	int		6336
coordsX		[8]	int		5696		//East ridge
coordsY		[8]	int		7488

coordsX		[9]	int		6080		//west door to player base
coordsY		[9]	int		14144
coordsX		[10]	int		6592		//east door to player base
coordsY		[10]	int		11456
coordsX		[11]	int		7232		//Player's LZ
coordsY		[11]	int		14656

/* ********************************************	*/
//regions (world coords)		MAX = 20
/* ********************************************	*/
regionsX1	[0]	int		2368		//north pass trigger zone
regionsY1	[0]	int		6592
regionsX2	[0]	int		4160
regionsY2	[0]	int		8384

regionsX1	[1]	int		448		//Gmma base area to protect
regionsY1	[1]	int		448
regionsX2	[1]	int		2880
regionsY2	[1]	int		3648

regionsX1	[2]	int		5696		//enemy transport1 blip (east)
regionsY1	[2]	int		4800
regionsX2	[2]	int		7360
regionsY2	[2]	int		7872
	
regionsX1	[3]	int		448		// enemy transport2 blip (west)
regionsY1	[3]	int		5440
regionsX2	[3]	int		1600
regionsY2	[3]	int		7104

//this region needs to be the same as in Cam3BX regions[0] since trap trigger
regionsX1	[4]	int		448	//440			// enemy/player gamma base
regionsY1	[4]	int		448	//576
regionsX2	[4]	int		2880	//3008
regionsY2	[4]	int		3648	//3776

regionsX1	[5]	int		6080		// transport 1 group east
regionsY1	[5]	int		5568
regionsX2	[5]	int		6848
regionsY2	[5]	int		6080

regionsX1	[6]	int		192		// transport 2 group west
regionsY1	[6]	int		4288
regionsX2	[6]	int		1472
regionsY2	[6]	int		6336


/* ********************************************	*/
/* sector Stuff */
/* ********************************************	*/
/*reuse
//sectors to attack (covers 1A-C expansion area, in order of priority to attack)
//MAX = 20
//sect15
sectorsX1	[0]	int		10432
sectorsY1	[0]	int		12736
sectorsX2	[0]	int		14272
sectorsY2	[0]	int		15552
//sect21
sectorsX1	[1]	int		8896
sectorsY1	[1]	int		13760
sectorsX2	[1]	int		10304
sectorsY2	[1]	int		15040
//sect20
sectorsX1	[2]	int		6336
sectorsY1	[2]	int		13760
sectorsX2	[2]	int		8768
sectorsY2	[2]	int		14144
//ravine entrance to 1B
//sect
sectorsX1	[3]	int		2112
sectorsY1	[3]	int		12736
sectorsX2	[3]	int		6336
sectorsY2	[3]	int		14784
//sect
sectorsX1	[4]	int		1600
sectorsY1	[4]	int		10176
sectorsX2	[4]	int		5952
sectorsY2	[4]	int		12608
//sect
sectorsX1	[5]	int		4672
sectorsY1	[5]	int		8640
sectorsX2	[5]	int		5696
sectorsY2	[5]	int		10048
//sect
sectorsX1	[6]	int		4160
sectorsY1	[6]	int		6464
sectorsX2	[6]	int		5056
sectorsY2	[6]	int		8512
//sect (base)
sectorsX1	[7]	int		832
sectorsY1	[7]	int		6336
sectorsX2	[7]	int		3392
sectorsY2	[7]	int		7104
//sect
sectorsX1	[8]	int		4800
sectorsY1	[8]	int		5056
sectorsX2	[8]	int		6208
sectorsY2	[8]	int		6208
//sect
sectorsX1	[9]	int		3392
sectorsY1	[9]	int		4672
sectorsX2	[9]	int		4160
sectorsY2	[9]	int		5440
//sect
sectorsX1	[10]	int		5056
sectorsY1	[10]	int		4160
sectorsX2	[10]	int		5312
sectorsY2	[10]	int		4928
//sect
sectorsX1	[11]	int		4032
sectorsY1	[11]	int		1216
sectorsX2	[11]	int		6208
sectorsY2	[11]	int		3264
//sect
sectorsX1	[12]	int		3392
sectorsY1	[12]	int		832
sectorsX2	[12]	int		3776
sectorsY2	[12]	int		1472
//sect
sectorsX1	[13]	int		2624
sectorsY1	[13]	int		1600
sectorsX2	[13]	int		3392
sectorsY2	[13]	int		1856
//sect
sectorsX1	[14]	int		832
sectorsY1	[14]	int		1344
sectorsX2	[14]	int		2496
sectorsY2	[14]	int		3392
//sect
sectorsX1	[15]	int		1600
sectorsY1	[15]	int		3520
sectorsX2	[15]	int		2496
sectorsY2	[15]	int		4544
//sect
sectorsX1	[16]	int		832
sectorsY1	[16]	int		1344
sectorsX2	[16]	int		1728
sectorsY2	[16]	int		2880
*/

/* ********************************************	*/
/* Enemy Base Blips */
/* ********************************************	*/
numBases		int		2		//MAX = 5. Must be same as number of bases listed next

basePlayer	[0]	int		0
baseMsg	[0]	INTMESSAGE	"CM3B_TRANS1"
baseRegion	[0]	int		2
baseWav1	[0]	int		0
baseWav2	[0]	int		3		//index to baseSnd	Eradicated

basePlayer	[1]	int		0		//do radar as a base
baseMsg	[1]	INTMESSAGE	"CM3B_TRANS2"
baseRegion	[1]	int		3
baseWav1	[1]	int		0
baseWav2	[1]	int		3

/*reuse
basePlayer	[0]	int		0		//enemy player number who owns base
baseMsg	[0]	INTMESSAGE	"CM3B_BASE4"	//enemy base blip message (prox.txt)
baseRegion	[0]	int		0		//index to regions
baseWav1	[0]	int		0
baseWav2	[0]	int		3		//index to baseSnd	Eradicated

basePlayer	[1]	int		0
baseMsg	[1]	INTMESSAGE	"CM3B_BASE6"
baseRegion	[1]	int		1
baseWav1	[1]	int		0		//index to baseSnd	enemy detected
baseWav2	[1]	int		3		//index to baseSnd	Eradicated

basePlayer	[2]	int		0
baseMsg	[2]	INTMESSAGE	"CM3B_TRANS1"
baseRegion	[2]	int		2
baseWav1	[2]	int		0
baseWav2	[2]	int		3		//index to baseSnd	Eradicated

basePlayer	[3]	int		0		//do radar as a base
baseMsg	[3]	INTMESSAGE	"CM3B_TRANS2"
baseRegion	[3]	int		3
baseWav1	[3]	int		0
baseWav2	[3]	int		3

basePlayer	[4]	int		1
baseMsg	[4]	INTMESSAGE	"CM3B_GAMMABASE"
baseRegion	[4]	int		4
baseWav1	[4]	int		-1
baseWav2	[4]	int		3
*/

/* ********************************************	*/
/* Enemy Groups */
/* ********************************************	*/
numGroups		int		3	//group MAX = 10

// transport 1 group (east)
grpType		[0]	int		0	//1		//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[0]	int		0		//player number enemy[0]
grpRegion		[0]	int		5		//index in regions array to define group
grpTimeGo		[0]	int		181		//30mins. (always make >= 0 for defence forces)
grpRegionGo		[0]	int		4		//index into regions to protect (usually a base blip region)
grpWhoGo		[0]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[0]	int		90		//don't set morale/leadership/retreat
grpLeadership	[0]	int		0		//leadership value
grpRetreatXY	[0]	int		0		//retreat to base 1 assembly
grpPosStart		[0]	int		7		//index in coords/sectors array (depends on grpType)
grpPosMin		[0]	int		5		//Minimum index in coords array
grpPosMax		[0]	int		8		//Maximum index in coords array
grpPosStep		[0]	int		1		//Step increase for next 'waypoint'
grpPosType		[0]	int		3		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[0]	int		2		//index factory to reinforce group. -1 = any factory.
grpIdealSize	[0]	int		10		//ideal size. If less than this factory will reinforce

// transport 2 group (west)
grpType		[1]	int		0	//1	//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[1]	int		0		//player number (NP)
grpRegion		[1]	int		6		//index in regions array
grpTimeGo		[1]	int		180		//30mins time trigger (always make >= 0 for defence forces)
grpRegionGo		[1]	int		4		//index into regions to protect (usually a base blip region)
grpWhoGo		[1]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[1]	int		90		//very timid! morale = 1%
grpLeadership	[1]	int		0		//leadership value
grpRetreatXY	[1]	int		2		//retreat (index in coords array) base1 assembly
grpPosStart		[1]	int		11		//index in sectors array (depends on grpType)
grpPosMin		[1]	int		9		//Minimum index in coords array
grpPosMax		[1]	int		11		//Maximum index in coords array
grpPosStep		[1]	int		1		//Step increase for next 'waypoint'
grpPosType		[1]	int		3		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[1]	int		3		//index structure to reinforce group. -1 = any factory.
grpIdealSize	[1]	int		10		//ideal size. If less than this factory will reinforce

/* gone now
//edge group
grpType		[2]	int		0	//1	//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[2]	int		0		//player number (Nexus)
grpRegion		[2]	int		6		//index in regions array
grpTimeGo		[2]	int		-1		//20s time trigger (always make >= 0 for defence forces)
grpRegionGo		[2]	int		4		//index into regions to protect (usually a base blip region)
grpWhoGo		[2]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[2]	int		90		//very timid! morale = 1%
grpLeadership	[2]	int		0		//leadership value
grpRetreatXY	[2]	int		1		//retreat (index in coords array) base1 assembly
grpPosStart		[2]	int		11		//index in sectors array (depends on grpType)
grpPosMin		[2]	int		9		//Minimum index in coords array
grpPosMax		[2]	int		11		//Maximum index in coords array
grpPosStep		[2]	int		1		//Step increase for next 'waypoint'
grpPosType		[2]	int		3		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[2]	int		0		//index structure to reinforce group. -1 = any factory.
grpIdealSize	[2]	int		99		//ideal size. If less than this factory will reinforce
*/

//Gamma defenders
grpType		[2]	int		1	//0 = Ambush/Patrol, 1 = Defence, 2 = Scout, 3 = Attack...
grpPlayer		[2]	int		1		//player number (Gamma base)
grpRegion		[2]	int		4		//index in regions array
grpTimeGo		[2]	int		179		//30mins time trigger (always make >= 0 for defence forces)
grpRegionGo		[2]	int		1		//area to defend (base)
grpWhoGo		[2]	int		0		//player number to cross trigger region (may not need?)
grpMorale		[2]	int		90		//very timid! morale = 1%
grpLeadership	[2]	int		0		//leadership value
grpRetreatXY	[2]	int		4		//retreat (index in coords array) base1 assembly
grpPosStart		[2]	int		5		//index in sectors array (depends on grpType)
grpPosMin		[2]	int		4		//Minimum index in coords array
grpPosMax		[2]	int		5		//Maximum index in coords array
grpPosStep		[2]	int		1		//Step increase for next 'waypoint'
grpPosType		[2]	int		2		//0 = stop, 1 = loop, 2 = pingpong, 3 = random thru waypoints
grpFactory		[2]	int		-1		//index structure to reinforce group. -1 = any factory.
grpIdealSize	[2]	int		10		//ideal size. If less than this factory will reinforce

/* Factories */
numFactories		int		4		//MAX = 10

/* gone
//edge map factory
factID		[0]	int		-1		//phantom factory, uses edge of map
factAssXY		[0]	int		1		//index to coords (edge of map)
factTimeGo		[0]	int		192		//32mindelay before starting production in 10s
factRegionGo	[0]	int		4		//trap region to trigger transport
factTempMin		[0]	int		15		//index to starting template
factTempMax		[0]	int		18		//index to maximum template
factEvery		[0]	int		240		//40 mins .Time in 10s for factory to produce again
*/

// gamma base large factory
factID		[0]	int		1		//index to structures
factAssXY		[0]	int		-1		//30minindex to assembly point. -1 for don't set
factTimeGo		[0]	int		181		//delay before starting production in 10s
factRegionGo	[0]	int		4		//trap region for trigger (assume WhoGo = 0)
factTempMin		[0]	int		0		//index to starting template
factTempMax		[0]	int		2		//index to maximum template
factEvery		[0]	int		90		//15mins .Time in 10s for factory to try to produce again

// gamma base cyborg factory 1
factID		[1]	int		2		//index to structures
factAssXY		[1]	int		-1		//index to assembly point. -1 for don't set
factTimeGo		[1]	int		186		//31mindelay before starting production in 10s
factRegionGo	[1]	int		4		//trap region for trigger (assume WhoGo = 0)
factTempMin		[1]	int		4		//index to starting template
factTempMax		[1]	int		6		//index to maximum template
factEvery		[1]	int		60		//10mins .Time in 10s for factory to try to produce again

/*gone
// gamma base cyborg factory 2
factID		[3]	int		3		//index to structures
factAssXY		[3]	int		-1		//index to assembly point. -1 for don't set
factTimeGo		[3]	int		-1		//delay before starting production in 10s
factRegionGo	[3]	int		4		//trap region for trigger (assume WhoGo = 0)
factTempMin		[3]	int		4		//index to starting template
factTempMax		[3]	int		6		//index to maximum template
factEvery		[3]	int		30		//5mins .Time in 10s for factory to try to produce again
*/

//transport 1 (East)
factID		[2]	int		-2		//phantom factory, uses transport
factAssXY		[2]	int		1		//index to LZs (point to correct one for enemy number, eg 2 for player 2 Collective)
factTimeGo		[2]	int		186		//31mindelay before starting production in 10s
factRegionGo	[2]	int		4	//-1		//trap region to trigger transport
factTempMin		[2]	int		7		//index to starting template
factTempMax		[2]	int		10		//index to maximum template
factEvery		[2]	int		150		//25 mins .Time in 10s for factory to produce again

//transport 2 (West)
factID		[3]	int		-2		//phantom factory, uses transport
factAssXY		[3]	int		2		//index to LZs (point to correct one for enemy number, eg 2 for player 2 Collective)
factTimeGo		[3]	int		181		//30mindelay before starting production in 10s
factRegionGo	[3]	int		4		//trap region to trigger transport
factTempMin		[3]	int		11		//index to starting template
factTempMax		[3]	int		14		//index to maximum template
factEvery		[3]	int		180		//30 mins .Time in 10s for factory to produce again

/* 'Globals' */
//These should be same in each file, but may need slight alterations
player		int		0				//player's player number
crate		FEATURESTAT	"Crate"
artRange	int		200	//171				//range to artifact about 1.5 tiles
objectiveRange	int		640				//range to objective 5 Tiles
wayRange	int		300				//range to waypoint 2ish tiles
targetRange	int		768				//range for target spotting
targetMax	int		4				//maximum number of targets to store for each enemy
lostSnd		SOUND		"pcv470.ogg"		//mission failed
attackSnd1	SOUND		"pcv337.ogg"	//Base Under Attack
artSnd1		SOUND		"pcv351.ogg"	//artifact sounds
artSnd2		SOUND		"pcv352.ogg"
transporter	TEMPLATE	"Transporter"	//for enemy transports
transSnd		SOUND		"pcv381.ogg"		//enemy transport landing
LZComp		SOUND		"pcv445.ogg"
LZClear		SOUND		"lz-clear.ogg"

//base WAVs. MAX = 5
baseSnd[0]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[1]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[2]	SOUND		"pcv379.ogg"	//Enemy Base Detected
baseSnd[3]	SOUND		"pcv394.ogg"	//Enemy base eradicated

}
